Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _net=_interopRequireDefault(require("net")),_advising=require("advising.js"),_Tackles=_interopRequireDefault(require("./Tackles"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class Blocks extends _Tackles.default{constructor(e){super(),this.dealParams(e),this.interval=e}dealParams(e){if(!Number.isInteger(e))throw new Error("[Error] The interval parameter should be of integer type.");if(e<=0)throw new Error("[Error] The interval should be a positive integer otherwise it has no meaning.");if(!Number.isInteger(e/500))throw new Error("[Error] The parameter interval should be divisible by 500 milliseconds.")}examineIpAddress(e,r){if("string"!=typeof e)throw new Error("[Error] The parameter ip should be of string type.");if(!(r instanceof _advising.Router))throw new Error("[Error] The parameter ipRouter should be the router type.");let t=!0;var i,o=r.gain(e);return void 0===o?(r.attach(e,1),i=this.interval,setTimeout(()=>{super.cleanTackle(e)},i)):(i=o,r.revise(e,i+=1),t=!1),t}examine(e){if("string"!=typeof e)throw new Error("[Error] The parameter ip should be of string type.");var r,{}=this;if(_net.default.isIPv4(e))return r=this.ipv4Router,this.examineIpAddress(e,r);if(_net.default.isIPv6(e))return r=this.ipv6Router,this.examineIpAddress(e,r);throw new Error("[Error] The Ip type is not expected.")}}var _default=exports.default=Blocks;