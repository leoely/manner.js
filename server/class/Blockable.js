Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _net=_interopRequireDefault(require("net"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getIntervalFromTime(e){var t=(new Date).getTime();return Math.floor(t-e)}class Blockable{setInterval(e){if(!Number.isInteger(e))throw new Error("[Error] The interval parameter should be of integer type.");if(e<=0)throw new Error("[Error] The interval should be a positive integer otherwise it has no meaning.");this.interval=e}cleanIpAddress(e,t){let r;if(_net.default.isIPv4(e))r=this.ipv4Block;else{if(!_net.default.isIPv6(e))throw new Error("[Error] The Ip type is not expected");r=this.ipv6Block}var i=r.gain(e);void 0!==i&&getIntervalFromTime(i)<t&&r.ruin(e)}examineIpAddress(t,r){let e=!0;var i=r.gain(t);if(void 0===i){var a=(new Date).getTime();r.attach(t,a);let e=this.interval;setTimeout(()=>this.cleanIpAddress(t,e),e)}else getIntervalFromTime(i)<this.interval?(a=this.interval-i,setTimeout(()=>this.cleanIpAddress(t,this.interval),a),e=!1):r.ruin(t);return e}}var _default=exports.default=Blockable;